{"ast":null,"code":"import React,{Fragment}from'react';import{Link}from\"react-router-dom\";import Moment from\"react-moment\";import{connect}from\"react-redux\";import{addLike,removeLike,deletePost}from\"../../actions/post\";var PostItem=function PostItem(_ref){var addLike=_ref.addLike,removeLike=_ref.removeLike,deletePost=_ref.deletePost,auth=_ref.auth,_ref$post=_ref.post,_id=_ref$post._id,text=_ref$post.text,name=_ref$post.name,avatar=_ref$post.avatar,user=_ref$post.user,likes=_ref$post.likes,comments=_ref$post.comments,date=_ref$post.date,showActions=_ref.showActions;return React.createElement(\"div\",{class:\"post bg-white p-1 my-1\"},React.createElement(\"div\",null,React.createElement(Link,{to:\"/profile/\".concat(user)},React.createElement(\"img\",{class:\"round-img\",src:avatar,alt:\"\"}),React.createElement(\"h4\",null,name))),React.createElement(\"div\",null,React.createElement(\"p\",{class:\"my-1\"},text),React.createElement(\"p\",{class:\"post-date\"},\"Posted on \",React.createElement(Moment,{format:\"YYYY/MM/DD\"},date)),showActions&&React.createElement(Fragment,null,React.createElement(\"button\",{onClick:function onClick(e){return addLike(_id);},type:\"button\",class:\"btn btn-light\"},React.createElement(\"i\",{class:\"fas fa-thumbs-up\"}),\" \",React.createElement(\"span\",null,likes.length>0&&React.createElement(\"span\",null,likes.length))),React.createElement(\"button\",{onClick:function onClick(e){return removeLike(_id);},type:\"button\",class:\"btn btn-light\"},React.createElement(\"i\",{class:\"fas fa-thumbs-down\"})),React.createElement(Link,{to:\"/posts/\".concat(_id),class:\"btn btn-primary\"},\"Discussion \",comments.length>0&&React.createElement(\"span\",{class:\"comment-count\"},comments.length)),!auth.loading&&user===auth.user._id&&React.createElement(\"button\",{onClick:function onClick(e){return deletePost(_id);},type:\"button\",class:\"btn btn-danger\"},React.createElement(\"i\",{class:\"fas fa-times\"})))));};PostItem.defaultProps={showActions:true};var mapStateToProps=function mapStateToProps(state){return{auth:state.auth};};export default connect(mapStateToProps,{addLike:addLike,removeLike:removeLike,deletePost:deletePost})(PostItem);","map":{"version":3,"sources":["C:/Users/jacob/Desktop/code/dev-connection/client/src/components/posts/PostItem.js"],"names":["React","Fragment","Link","Moment","connect","addLike","removeLike","deletePost","PostItem","auth","post","_id","text","name","avatar","user","likes","comments","date","showActions","e","length","loading","defaultProps","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\r\n\r\n\r\nconst PostItem = ({ addLike, removeLike, deletePost, auth, post: { _id, text, name, avatar, user, likes, comments, date }, showActions }) => {\r\n    return (\r\n        <div class=\"post bg-white p-1 my-1\">\r\n            <div>\r\n                <Link to={`/profile/${user}`}>\r\n                    <img\r\n                        class=\"round-img\"\r\n                        src={avatar}\r\n                        alt=\"\"\r\n                    />\r\n                    <h4>{name}</h4>\r\n                </Link>\r\n            </div>\r\n            <div>\r\n                <p class=\"my-1\">\r\n                    {text}\r\n                </p>\r\n                <p class=\"post-date\">\r\n                    Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\r\n                </p>\r\n\r\n                {showActions && <Fragment>\r\n                    <button onClick={e => addLike(_id)} type=\"button\" class=\"btn btn-light\">\r\n                        <i class=\"fas fa-thumbs-up\" />{\" \"}\r\n                        <span>{likes.length > 0 && (\r\n                            <span>{likes.length}</span>\r\n                        )}</span>\r\n                    </button>\r\n                    <button onClick={e => removeLike(_id)} type=\"button\" class=\"btn btn-light\">\r\n                        <i class=\"fas fa-thumbs-down\"></i>\r\n                    </button>\r\n                    <Link to={`/posts/${_id}`} class=\"btn btn-primary\">\r\n                        Discussion {comments.length > 0 && (\r\n                            <span class='comment-count'>{comments.length}</span>\r\n                        )}\r\n                    </Link>\r\n                    {!auth.loading && user === auth.user._id && (\r\n                        <button onClick={e => deletePost(_id)}\r\n                            type=\"button\"\r\n                            class=\"btn btn-danger\"\r\n                        >\r\n                            <i class=\"fas fa-times\"></i>\r\n                        </button>\r\n                    )}\r\n                </Fragment>}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nPostItem.defaultProps = {\r\n    showActions: true\r\n}\r\n\r\nPostItem.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    addLike: PropTypes.func.isRequired,\r\n    removeLike: PropTypes.func.isRequired,\r\n    deletePost: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(PostItem);\r\n"]},"metadata":{},"sourceType":"module"}