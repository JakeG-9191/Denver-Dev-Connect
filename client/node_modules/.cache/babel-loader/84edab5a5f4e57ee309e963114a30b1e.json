{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jacob\\\\Desktop\\\\code\\\\dev-connection\\\\client\\\\src\\\\components\\\\profile\\\\Profile.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \"../layout/Spinner\";\nimport { getProfileById } from \"../../actions/profile\";\nimport PropTypes from 'prop-types';\n\nconst Profile = ({\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth,\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, profile === null || loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Back To Developers\"), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && React.createElement(Link, {\n    to: \"/edit-profile\",\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Edit Profile\")));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["C:/Users/jacob/Desktop/code/dev-connection/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","connect","Link","Spinner","getProfileById","PropTypes","Profile","profile","loading","auth","match","params","id","isAuthenticated","user","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEF,EAAAA,cAAF;AAAkBG,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAA3B;AAAiDC,EAAAA,IAAjD;AAAwDC,EAAAA;AAAxD,CAAD,KAAqE;AACjFV,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,cAAc,CAACM,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAd;AACH,GAFQ,EAEN,CAACR,cAAD,EAAiBM,KAAK,CAACC,MAAN,CAAaC,EAA9B,CAFM,CAAT;AAIA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,OAAO,KAAK,IAAZ,IAAoBC,OAApB,GAA8B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9B,GAA4C,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACzC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADyC,EAIxCC,IAAI,CAACI,eAAL,IAAwBJ,IAAI,CAACD,OAAL,KAAiB,KAAzC,IAAkDC,IAAI,CAACK,IAAL,CAAUC,GAAV,KAAkBR,OAAO,CAACO,IAAR,CAAaC,GAAjF,IAAyF,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,eAAT;AAAyB,IAAA,SAAS,EAAC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJjD,CADjD,CADJ;AAYH,CAjBD;;AAmBAT,OAAO,CAACU,SAAR,GAAoB;AAChBZ,EAAAA,cAAc,EAAEC,SAAS,CAACY,IAAV,CAAeC,UADf;AAEhBX,EAAAA,OAAO,EAAEF,SAAS,CAACc,MAAV,CAAiBD,UAFV;AAGhBT,EAAAA,IAAI,EAAEJ,SAAS,CAACc,MAAV,CAAiBD;AAHP,CAApB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9Bd,EAAAA,OAAO,EAAEc,KAAK,CAACd,OADe;AAE9BE,EAAAA,IAAI,EAAEY,KAAK,CAACZ;AAFkB,CAAL,CAA7B;;AAKA,eAAeR,OAAO,CAACmB,eAAD,EAAkB;AAAEhB,EAAAA;AAAF,CAAlB,CAAP,CAA6CE,OAA7C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport { getProfileById } from \"../../actions/profile\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Profile = ({ getProfileById, profile: { profile, loading }, auth,  match }) => {\r\n    useEffect(() => {\r\n        getProfileById(match.params.id);\r\n    }, [getProfileById, match.params.id]);\r\n    \r\n    return (\r\n        <Fragment>\r\n            {profile === null || loading ? <Spinner /> : <Fragment>\r\n                <Link to=\"/profiles\" className=\"btn btn-light\">\r\n                    Back To Developers\r\n                </Link>\r\n                {auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && (<Link to=\"/edit-profile\" className=\"btn btn-dark\">\r\n                    Edit Profile\r\n                </Link>)}\r\n            </Fragment>}\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nProfile.propTypes = {\r\n    getProfileById: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n"]},"metadata":{},"sourceType":"module"}