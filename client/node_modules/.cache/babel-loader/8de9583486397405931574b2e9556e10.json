{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jacob\\\\Desktop\\\\code\\\\dev-connection\\\\client\\\\src\\\\components\\\\post\\\\Post.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport PostItem from \"../posts/PostItem\";\nimport CommentForm from \"../post/CommentForm\";\nimport { getPost } from \"../../actions/post\";\n\nconst Post = ({\n  getPost,\n  post: {\n    post,\n    loading\n  },\n  match\n}) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n  return loading || post === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/posts\",\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Back To Posts\"), React.createElement(PostItem, {\n    post: post,\n    showActions: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(CommentForm, {\n    postId: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPost\n})(Post);","map":{"version":3,"sources":["C:/Users/jacob/Desktop/code/dev-connection/client/src/components/post/Post.js"],"names":["React","Fragment","useEffect","PropTypes","Link","connect","Spinner","PostItem","CommentForm","getPost","Post","post","loading","match","params","id","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAASC,OAAT,QAAwB,oBAAxB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAED,EAAAA,OAAF;AAAWE,EAAAA,IAAI,EAAE;AAAEA,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAjB;AAAoCC,EAAAA;AAApC,CAAD,KAAiD;AAC1DX,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,OAAO,CAACI,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAP;AACH,GAFQ,EAEN,CAACN,OAAD,CAFM,CAAT;AAIA,SAAOG,OAAO,IAAID,IAAI,KAAK,IAApB,GAA2B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA3B,GAAyC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAC5C,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,SAAS,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAD4C,EAI5C,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,IAAhB;AAAsB,IAAA,WAAW,EAAE,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJ4C,EAK5C,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEA,IAAI,CAACK,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAL4C,CAAhD;AAOH,CAZD;;AAcAN,IAAI,CAACO,SAAL,GAAiB;AACbR,EAAAA,OAAO,EAAEN,SAAS,CAACe,IAAV,CAAeC,UADX;AAEbR,EAAAA,IAAI,EAAER,SAAS,CAACiB,MAAV,CAAiBD;AAFV,CAAjB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BX,EAAAA,IAAI,EAAEW,KAAK,CAACX;AADkB,CAAL,CAA7B;;AAIA,eAAeN,OAAO,CAACgB,eAAD,EAAkB;AAAEZ,EAAAA;AAAF,CAAlB,CAAP,CAAsCC,IAAtC,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport PostItem from \"../posts/PostItem\";\r\nimport CommentForm from \"../post/CommentForm\";\r\nimport { getPost } from \"../../actions/post\";\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n    useEffect(() => {\r\n        getPost(match.params.id);\r\n    }, [getPost]);\r\n\r\n    return loading || post === null ? <Spinner /> : <Fragment>\r\n        <Link to=\"/posts\" className=\"btn\">\r\n            Back To Posts\r\n        </Link>\r\n        <PostItem post={post} showActions={false} />\r\n        <CommentForm postId={post._id} />\r\n    </Fragment>\r\n};\r\n\r\nPost.propTypes = {\r\n    getPost: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    post: state.post\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post);\r\n"]},"metadata":{},"sourceType":"module"}