{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE, CLEAR_PROFILE, DELETE_ACCOUNT, GET_PROFILES, GET_REPOS } from \"./types\"; // Get current user profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/profile/me\");\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get all profiles\n\nexport const getProfiles = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await axios.get(\"/api/profile\");\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get profile by ID\n\nexport const getProfileById = userId => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/profile/user/\".concat(userId));\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get Github repos\n// Get all profiles\n\nexport const getGithubRepos = username => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/profile/github/\".concat(username));\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Create or update profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.post(\"/api/profile\", formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\"));\n\n    if (!edit) {\n      history.push(\"/dashboard\");\n    }\n\n    ;\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n\n  ;\n}; // Add experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.put(\"/api/profile/experience\", formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience Added\", \"success\"));\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n\n  ;\n}; // Add education\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.put(\"/api/profile/education\", formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Education Added\", \"success\"));\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n\n  ;\n}; // Delete experience\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(\"/api/profile/experience/\".concat(id));\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete education\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(\"/api/profile/education/\".concat(id));\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Education Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete account and clear profile \n\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm(\"Are you sure? This can NOT be undone!\")) {\n    try {\n      const res = await axios.delete(\"/api/profile\");\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: DELETE_ACCOUNT\n      });\n      dispatch(setAlert(\"Your account has been permanently deleted\", \"danger\"));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/jacob/Desktop/code/dev-connection/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","CLEAR_PROFILE","DELETE_ACCOUNT","GET_PROFILES","GET_REPOS","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getProfiles","getProfileById","userId","getGithubRepos","username","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","error","addExperience","put","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n    GET_PROFILE,\r\n    PROFILE_ERROR,\r\n    UPDATE_PROFILE,\r\n    CLEAR_PROFILE,\r\n    DELETE_ACCOUNT,\r\n    GET_PROFILES,\r\n    GET_REPOS\r\n} from \"./types\";\r\n\r\n// Get current user profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get(\"/api/profile/me\");\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n// Get all profiles\r\nexport const getProfiles = () => async dispatch => {\r\n    dispatch({\r\n        type: CLEAR_PROFILE\r\n    });\r\n\r\n    try {\r\n        const res = await axios.get(\"/api/profile\");\r\n\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n// Get profile by ID\r\nexport const getProfileById = userId => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/profile/user/${userId}`);\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n// Get Github repos\r\n// Get all profiles\r\nexport const getGithubRepos = username => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/profile/github/${username}`);\r\n\r\n        dispatch({\r\n            type: GET_REPOS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n// Create or update profile\r\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        const res = await axios.post(\"/api/profile\", formData, config);\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\"));\r\n\r\n        if (!edit) {\r\n            history.push(\"/dashboard\");\r\n        };\r\n\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    };\r\n};\r\n\r\n// Add experience\r\nexport const addExperience = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        const res = await axios.put(\"/api/profile/experience\", formData, config);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert(\"Experience Added\", \"success\"));\r\n\r\n\r\n        history.push(\"/dashboard\");\r\n\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    };\r\n};\r\n\r\n// Add education\r\nexport const addEducation = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        const res = await axios.put(\"/api/profile/education\", formData, config);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert(\"Education Added\", \"success\"));\r\n\r\n\r\n        history.push(\"/dashboard\");\r\n\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    };\r\n};\r\n\r\n// Delete experience\r\nexport const deleteExperience = id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/experience/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert(\"Experience Removed\", \"success\"));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n// Delete education\r\nexport const deleteEducation = id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/education/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert(\"Education Removed\", \"success\"));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n// Delete account and clear profile \r\nexport const deleteAccount = () => async dispatch => {\r\n    if (window.confirm(\"Are you sure? This can NOT be undone!\")) {\r\n        try {\r\n            const res = await axios.delete(`/api/profile`);\r\n\r\n            dispatch({\r\n                type: CLEAR_PROFILE,\r\n            });\r\n\r\n            dispatch({\r\n                type: DELETE_ACCOUNT,\r\n            });\r\n\r\n            dispatch(setAlert(\"Your account has been permanently deleted\", \"danger\"));\r\n        } catch (err) {\r\n            dispatch({\r\n                type: PROFILE_ERROR,\r\n                payload: { msg: err.response.statusText, status: err.response.status }\r\n            });\r\n        }\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}