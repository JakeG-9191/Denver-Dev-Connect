{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jacob\\\\Desktop\\\\code\\\\dev-connection\\\\client\\\\src\\\\components\\\\posts\\\\PostItem.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport { connect } from \"react-redux\";\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  },\n  showActions\n}) => {\n  return React.createElement(\"div\", {\n    class: \"post bg-white p-1 my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/profile/\".concat(user),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    class: \"round-img\",\n    src: avatar,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, name))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    class: \"my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, text), React.createElement(\"p\", {\n    class: \"post-date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Posted on \", React.createElement(Moment, {\n    format: \"YYYY/MM/DD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, date)), showActions && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: e => addLike(_id),\n    type: \"button\",\n    class: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    class: \"fas fa-thumbs-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, likes.length > 0 && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, likes.length))), React.createElement(\"button\", {\n    onClick: e => removeLike(_id),\n    type: \"button\",\n    class: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    class: \"fas fa-thumbs-down\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(Link, {\n    to: \"/posts/\".concat(_id),\n    class: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Discussion \", comments.length > 0 && React.createElement(\"span\", {\n    class: \"comment-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, comments.length)), !auth.loading && user === auth.user._id && React.createElement(\"button\", {\n    onClick: e => deletePost(_id),\n    type: \"button\",\n    class: \"btn btn-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    class: \"fas fa-times\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })))));\n};\n\nPostItem.defaultProps = {\n  showActions: true\n};\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostItem);","map":{"version":3,"sources":["C:/Users/jacob/Desktop/code/dev-connection/client/src/components/posts/PostItem.js"],"names":["React","Fragment","PropTypes","Link","Moment","connect","addLike","removeLike","deletePost","PostItem","auth","post","_id","text","name","avatar","user","likes","comments","date","showActions","e","length","loading","defaultProps","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\r\n\r\n\r\nconst PostItem = ({ addLike, removeLike, deletePost, auth, post: { _id, text, name, avatar, user, likes, comments, date }, showActions }) => {\r\n    return (\r\n        <div class=\"post bg-white p-1 my-1\">\r\n            <div>\r\n                <Link to={`/profile/${user}`}>\r\n                    <img\r\n                        class=\"round-img\"\r\n                        src={avatar}\r\n                        alt=\"\"\r\n                    />\r\n                    <h4>{name}</h4>\r\n                </Link>\r\n            </div>\r\n            <div>\r\n                <p class=\"my-1\">\r\n                    {text}\r\n                </p>\r\n                <p class=\"post-date\">\r\n                    Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\r\n                </p>\r\n\r\n                {showActions && <Fragment>\r\n                    <button onClick={e => addLike(_id)} type=\"button\" class=\"btn btn-light\">\r\n                        <i class=\"fas fa-thumbs-up\" />{\" \"}\r\n                        <span>{likes.length > 0 && (\r\n                            <span>{likes.length}</span>\r\n                        )}</span>\r\n                    </button>\r\n                    <button onClick={e => removeLike(_id)} type=\"button\" class=\"btn btn-light\">\r\n                        <i class=\"fas fa-thumbs-down\"></i>\r\n                    </button>\r\n                    <Link to={`/posts/${_id}`} class=\"btn btn-primary\">\r\n                        Discussion {comments.length > 0 && (\r\n                            <span class='comment-count'>{comments.length}</span>\r\n                        )}\r\n                    </Link>\r\n                    {!auth.loading && user === auth.user._id && (\r\n                        <button onClick={e => deletePost(_id)}\r\n                            type=\"button\"\r\n                            class=\"btn btn-danger\"\r\n                        >\r\n                            <i class=\"fas fa-times\"></i>\r\n                        </button>\r\n                    )}\r\n                </Fragment>}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nPostItem.defaultProps = {\r\n    showActions: true\r\n}\r\n\r\nPostItem.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    addLike: PropTypes.func.isRequired,\r\n    removeLike: PropTypes.func.isRequired,\r\n    deletePost: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(PostItem);\r\n"]},"metadata":{},"sourceType":"module"}