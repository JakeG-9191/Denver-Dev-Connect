{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jacob\\\\Desktop\\\\code\\\\dev-connection\\\\client\\\\src\\\\components\\\\profile\\\\ProfileGithub.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { getGithubRepos } from \"../../actions/profile\";\nimport Spinner from \"../layout/Spinner\";\n\nconst ProfileGithub = ({\n  username,\n  getGithubRepos,\n  repos\n}) => {\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos]);\n  return React.createElement(\"div\", {\n    className: \"profile-github\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primary my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Github Repos\"), repos === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }) : repos.map(repo => React.createElement(\"div\", {\n    key: repo._id,\n    className: \"repo bg-white p-1 my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: repo.html_url,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, repo.name)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, repo.description)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"badge badge-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Stars: \", repo.stargazers_count), React.createElement(\"li\", {\n    className: \"badge badge-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Watchers: \", repo.watchers_count), React.createElement(\"li\", {\n    className: \"badge badge-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Forks: \", repo.forks_count))))));\n};\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\n\nexport default connect(mapStateToProps, {\n  getGithubRepos\n})(ProfileGithub);","map":{"version":3,"sources":["C:/Users/jacob/Desktop/code/dev-connection/client/src/components/profile/ProfileGithub.js"],"names":["React","useEffect","PropTypes","connect","getGithubRepos","Spinner","ProfileGithub","username","repos","map","repo","_id","html_url","name","description","stargazers_count","watchers_count","forks_count","propTypes","func","isRequired","array","string","mapStateToProps","state","profile"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYH,EAAAA,cAAZ;AAA4BI,EAAAA;AAA5B,CAAD,KAAyC;AAC3DP,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,cAAc,CAACG,QAAD,CAAd;AACH,GAFQ,EAEN,CAACH,cAAD,CAFM,CAAT;AAIA,SACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEKI,KAAK,KAAK,IAAV,GACG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,GAGGA,KAAK,CAACC,GAAN,CAAUC,IAAI,IACV;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAoB,IAAA,SAAS,EAAC,wBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,IAAI,EAAED,IAAI,CAACE,QAAd;AAAwB,IAAA,MAAM,EAAC,QAA/B;AAAwC,IAAA,GAAG,EAAC,qBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmEF,IAAI,CAACG,IAAxE,CADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,IAAI,CAACI,WAAT,CAJJ,CADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACYJ,IAAI,CAACK,gBADjB,CADJ,EAII;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACeL,IAAI,CAACM,cADpB,CAJJ,EAOI;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACYN,IAAI,CAACO,WADjB,CAPJ,CADJ,CAPJ,CADJ,CALR,CADJ;AAgCH,CArCD;;AAuCAX,aAAa,CAACY,SAAd,GAA0B;AACtBd,EAAAA,cAAc,EAAEF,SAAS,CAACiB,IAAV,CAAeC,UADT;AAEtBZ,EAAAA,KAAK,EAAEN,SAAS,CAACmB,KAAV,CAAgBD,UAFD;AAGtBb,EAAAA,QAAQ,EAAEL,SAAS,CAACoB,MAAV,CAAiBF;AAHL,CAA1B;;AAMA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAC9BhB,EAAAA,KAAK,EAAEgB,KAAK,CAACC,OAAN,CAAcjB;AADS,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACoB,eAAD,EAAkB;AAAEnB,EAAAA;AAAF,CAAlB,CAAP,CAA6CE,aAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport { getGithubRepos } from \"../../actions/profile\";\r\nimport Spinner from \"../layout/Spinner\";\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n    useEffect(() => {\r\n        getGithubRepos(username)\r\n    }, [getGithubRepos]);\r\n\r\n    return (\r\n        <div className=\"profile-github\">\r\n            <h2 className=\"text-primary my-1\">Github Repos</h2>\r\n            {repos === null ? (\r\n                <Spinner />\r\n                ) : (\r\n                repos.map(repo => (\r\n                    <div key={repo._id} className=\"repo bg-white p-1 my-1\">\r\n                        <div>\r\n                            <h4>\r\n                                <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">{repo.name}</a>\r\n                            </h4>\r\n                            <p>{repo.description}</p>\r\n                        </div>\r\n                        <div>\r\n                            <ul>\r\n                                <li className=\"badge badge-primary\">\r\n                                    Stars: {repo.stargazers_count}\r\n                                </li>\r\n                                <li className=\"badge badge-dark\">\r\n                                    Watchers: {repo.watchers_count}\r\n                                </li>\r\n                                <li className=\"badge badge-light\">\r\n                                    Forks: {repo.forks_count}\r\n                                </li>\r\n                            </ul>\r\n                        </div>   \r\n                    </div>\r\n                ))\r\n            )}\r\n        </div>\r\n    )\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n    getGithubRepos: PropTypes.func.isRequired,\r\n    repos: PropTypes.array.isRequired,\r\n    username: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    repos: state.profile.repos\r\n});\r\n\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\r\n"]},"metadata":{},"sourceType":"module"}