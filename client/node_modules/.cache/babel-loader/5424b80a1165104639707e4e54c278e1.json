{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\jacob\\\\Desktop\\\\code\\\\dev-connection\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST } from \"../actions/types\";\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case GET_POSTS:\n      return _objectSpread({}, state, {\n        posts: payload,\n        loading: false\n      });\n\n    case ADD_POST:\n      return _objectSpread({}, state, {\n        posts: [...state.posts, payload],\n        loading: false\n      });\n\n    case DELETE_POST:\n      return _objectSpread({}, state, {\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      });\n\n    case POST_ERROR:\n      return _objectSpread({}, state, {\n        error: payload,\n        loading: false\n      });\n\n    case UPDATE_LIKES:\n      return _objectSpread({}, state, {\n        posts: state.post.map(post => post._id === payload.id ? _objectSpread({}, post, {\n          likes: payload.likes\n        }) : post),\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/jacob/Desktop/code/dev-connection/client/src/reducers/post.js"],"names":["GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","initialState","posts","post","loading","error","state","action","type","payload","filter","_id","map","id","likes"],"mappings":";;;;;;AAAA,SACIA,SADJ,EAEIC,UAFJ,EAGIC,YAHJ,EAIIC,WAJJ,EAKIC,QALJ,QAMO,kBANP;AAQA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,IAAI,EAAE,IAFW;AAGjBC,EAAAA,OAAO,EAAE,IAHQ;AAIjBC,EAAAA,KAAK,EAAE;AAJU,CAArB;AAOA,eAAe,UAASC,KAAK,GAAGL,YAAjB,EAA+BM,MAA/B,EAAsC;AAAA,QACzCC,IADyC,GACvBD,MADuB,CACzCC,IADyC;AAAA,QACnCC,OADmC,GACvBF,MADuB,CACnCE,OADmC;;AAGjD,UAAOD,IAAP;AACI,SAAKZ,SAAL;AACI,+BACOU,KADP;AAEIJ,QAAAA,KAAK,EAAEO,OAFX;AAGIL,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKJ,QAAL;AACI,+BACOM,KADP;AAEIJ,QAAAA,KAAK,EAAE,CAAC,GAAGI,KAAK,CAACJ,KAAV,EAAiBO,OAAjB,CAFX;AAGIL,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKL,WAAL;AACI,+BACOO,KADP;AAEIJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYQ,MAAZ,CAAmBP,IAAI,IAAIA,IAAI,CAACQ,GAAL,KAAaF,OAAxC,CAFX;AAGIL,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKP,UAAL;AACI,+BACOS,KADP;AAEID,QAAAA,KAAK,EAAEI,OAFX;AAGIL,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKN,YAAL;AACI,+BACOQ,KADP;AAEIJ,QAAAA,KAAK,EAAEI,KAAK,CAACH,IAAN,CAAWS,GAAX,CAAeT,IAAI,IAAIA,IAAI,CAACQ,GAAL,KAAaF,OAAO,CAACI,EAArB,qBAA+BV,IAA/B;AAAqCW,UAAAA,KAAK,EAAEL,OAAO,CAACK;AAApD,aAA8DX,IAArF,CAFX;AAGIC,QAAAA,OAAO,EAAE;AAHb;;AAKJ;AACI,aAAOE,KAAP;AAhCR;AAkCH","sourcesContent":["import {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    post: null,\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: payload,\r\n                loading: false\r\n            };\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, payload],\r\n                loading: false\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post._id !== payload),\r\n                loading: false\r\n            };\r\n        case POST_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            };\r\n        case UPDATE_LIKES:\r\n            return {\r\n                ...state,\r\n                posts: state.post.map(post => post._id === payload.id ? { ...post, likes: payload.likes } : post),\r\n                loading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}